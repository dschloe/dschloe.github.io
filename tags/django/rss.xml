<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Django on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/tags/django/</link>
    <description>Recent content in Django on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Mar 2025 04:00:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/tags/django/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker 활용한 django 예제</title>
      <link>https://dschloe.github.io/settings/2025/03/docker_django_example/</link>
      <pubDate>Thu, 27 Mar 2025 04:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/2025/03/docker_django_example/</guid>
      <description>개요 Docker에서 django 개발환경 만들기 간단한 웹개발 실습 참고자료 한 권으로 배우는 도커 &amp;amp; 쿠버네티스 교재 구매 링크 : https://product.kyobobook.co.kr/detail/S000213057687 실습사전조건 가상환경으로 Ubuntu 24.04 LTS make : 소스코드를 컴파일할 때 사용하는 자동 빌드 도구이다. build-essential : C/C++ 컴파일에 필요한 기본 컴파일 도구 모음이다. libssl-dev : SSL/TLS 통신을 위한 OpenSSL 라이브러리 개발 헤더이다. zlib1g-dev : 압축 알고리즘용 zlib 라이브러리 개발 파일이다. libbz2-dev : bzip2 압축 알고리즘용 개발 라이브러리이다. libreadline-dev : 터미널에서 편리한 입력을 가능하게 하는 readline 개발 라이브러리이다.</description>
    </item>
    
    <item>
      <title>django-web on GCE</title>
      <link>https://dschloe.github.io/python/2024/04/djangoweb_on_gce/</link>
      <pubDate>Thu, 18 Apr 2024 01:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2024/04/djangoweb_on_gce/</guid>
      <description>개요 django-web을 GCE에 설치 및 배포를 간단하게 진행하도록 한다. 사전준비 Google Cloud Platform 회원가입은 미리 진행했고, GCE 인스턴스를 생성할 줄 아는 상태임을 전제로 한다. Miniconda 설치가 끝난 상황임을 가정한다. Miniconda Linux 설치 : https://docs.anaconda.com/free/miniconda/ Miniconda 설치 mkdir -p ~/miniconda3 wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3 rm -rf ~/miniconda3/miniconda.sh 설치 후, 새로 설치한 미니콘다를 초기화합니다. 다음 명령은 bash 및 zsh 셸을 초기화 ~/miniconda3/bin/conda init bash ~/miniconda3/bin/conda init zsh django on GCE GCE Shell에서 django를 설치한다.</description>
    </item>
    
    <item>
      <title>django tutorial - pyburger 3</title>
      <link>https://dschloe.github.io/python/2024/01/django_pyburger_3/</link>
      <pubDate>Wed, 24 Jan 2024 04:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2024/01/django_pyburger_3/</guid>
      <description>공지 멀티캠퍼스 수업 보조자료로 활용하기 위해 아래 교재 내용을 발췌하였음을 알립니다. 판매처 : https://product.kyobobook.co.kr/detail/S000201056504 Github에서 프로젝트 내려받기 다음 경로에서 프로젝트를 내려 받는다. 사이트 : https://github.com/dschloe/pyburger Download Zip을 선택하여 프로젝트를 내려 받는다. 다음 명령어를 실행하여 Local의 적당한 곳에서 다운로드 받는다. 폴더 수정 .DS_Store 파일은 삭제한다 폴더명은 pyburger로 변경한다. VS Code로 폴더 열기 아래와 같이 VS Code로 pyburger 폴더를 연다. 프로젝트 설정 가상환경을 설정하고 django를 설치한다. $ virtualenv venv $ source venv/Scripts/activate (venv) $ pip install &amp;#39;django&amp;lt;5&amp;#39; 첫번째 확인사항 runserver를 실행하여 정상적으로 작동하는지 확인한다.</description>
    </item>
    
    <item>
      <title>django tutorial - pyburger 2</title>
      <link>https://dschloe.github.io/python/2024/01/django_pyburger_2/</link>
      <pubDate>Wed, 24 Jan 2024 03:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2024/01/django_pyburger_2/</guid>
      <description>공지 멀티캠퍼스 수업 보조자료로 활용하기 위해 아래 교재 내용을 발췌하였음을 알립니다. 판매처 : https://product.kyobobook.co.kr/detail/S000201056504 별도의 app 추가 application을 생성하는 명령어를 활용하여 app을 생성한다. python manage.py startapp burgers 트리 구조는 다음과 같다. $ tree -L 2 . |-- burgers | |-- __init__.py | |-- admin.py | |-- apps.py | |-- migrations | |-- models.py | |-- tests.py | `-- views.py |-- config | |-- __init__.py | |-- __pycache__ | |-- asgi.py | |-- settings.</description>
    </item>
    
    <item>
      <title>django tutorial - pyburger 1</title>
      <link>https://dschloe.github.io/python/2024/01/django_pyburger_1/</link>
      <pubDate>Wed, 24 Jan 2024 02:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2024/01/django_pyburger_1/</guid>
      <description>Django Pyburger - 1, 맛보기 공지 멀티캠퍼스 수업 보조자료로 활용하기 위해 아래 교재 내용을 발췌하였음을 알립니다. 판매처 : https://product.kyobobook.co.kr/detail/S000201056504 Django 설치 터미널에서 django를 설치한다. pip install &amp;#39;django&amp;lt;5&amp;#39; Django 버전 확인 터미널에서 Django의 버전을 확인한다. django-admin --version 4.2.9 Django 프로젝트 생성 다음 명령어를 실행하여 django 프로젝트를 생성한다. djang-admin은 터미널에서 실행할 수 있는 프로그램이며, django 프로젝트를 관리하는 여러 기능들을 가지고 있음 startproject는 django 프로젝트의 기반 구조를 만드는 기능 django-admin startproject config . 생성된 파일 목록을 확인한다.</description>
    </item>
    
    <item>
      <title>Django - ExcelCalCulator_7</title>
      <link>https://dschloe.github.io/python/2023/08/django_excel_calculator_7/</link>
      <pubDate>Thu, 03 Aug 2023 06:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/08/django_excel_calculator_7/</guid>
      <description>개요 Django 한 그릇 뚝딱 교재의 내용에서 멀티캠퍼스 강의에 맞게 일부 수정함 2019년 버전이고 현재는 2023년이기 때문에 소스코드 변경 사항이 필요할 거 같아서 글을 남김 교재 홍보 교재 구매 : https://www.yes24.com/Product/Goods/83568594 Step 01 - 이전 글 1편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_1/ 2편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_2/ 3편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_3/ 4편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_4/ 5편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_5/ 6편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_6/ Step 02 - 프로젝트 완성하기 지금까지 구현한 기능과 미완료된 기능을 확인한다. Step 03 - 로그인 실패 시 보이는 화면을 구현 우선 사용자가 로그인 실패 시, 보이는 화면으로 구현한다.</description>
    </item>
    
    <item>
      <title>Django - ExcelCalCulator_6</title>
      <link>https://dschloe.github.io/python/2023/08/django_excel_calculator_6/</link>
      <pubDate>Thu, 03 Aug 2023 05:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/08/django_excel_calculator_6/</guid>
      <description>개요 Django 한 그릇 뚝딱 교재의 내용에서 멀티캠퍼스 강의에 맞게 일부 수정함 2019년 버전이고 현재는 2023년이기 때문에 소스코드 변경 사항이 필요할 거 같아서 글을 남김 교재 홍보 교재 구매 : https://www.yes24.com/Product/Goods/83568594 Step 01 - 이전 글 1편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_1/ 2편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_2/ 3편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_3/ 4편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_4/ 5편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_5/ Step 02 - 프로젝트 완성하기 지금까지 구현한 기능과 미완료된 기능을 확인한다. Step 03 - 엑셀 결과 화면 출력 위한 세션값 저장 우선 calculate 함수의 마지막에 엑셀 결과 화면으로 데이터와 함께 url을 이동시켜본다.</description>
    </item>
    
    <item>
      <title>Django - ExcelCalCulator_5</title>
      <link>https://dschloe.github.io/python/2023/08/django_excel_calculator_5/</link>
      <pubDate>Thu, 03 Aug 2023 04:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/08/django_excel_calculator_5/</guid>
      <description>개요 Django 한 그릇 뚝딱 교재의 내용에서 멀티캠퍼스 강의에 맞게 일부 수정함 2019년 버전이고 현재는 2023년이기 때문에 소스코드 변경 사항이 필요할 거 같아서 글을 남김 교재 홍보 교재 구매 : https://www.yes24.com/Product/Goods/83568594 Step 01 - 이전 글 1편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_1/ 2편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_2/ 3편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_3/ 4편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_4/ Step 02 - 파일 업로드 하기 로그인을 통해 메인 화면으로 왔다면, 파일 업로드 기능 구현 Step 03 - 파일 업로드 기능 구현 check - 1 : index.</description>
    </item>
    
    <item>
      <title>Django - ExcelCalCulator_4</title>
      <link>https://dschloe.github.io/python/2023/08/django_excel_calculator_4/</link>
      <pubDate>Thu, 03 Aug 2023 03:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/08/django_excel_calculator_4/</guid>
      <description>개요 Django 한 그릇 뚝딱 교재의 내용에서 멀티캠퍼스 강의에 맞게 일부 수정함 2019년 버전이고 현재는 2023년이기 때문에 소스코드 변경 사항이 필요할 거 같아서 글을 남김 교재 홍보 교재 구매 : https://www.yes24.com/Product/Goods/83568594 Step 01 - 이전 글 1편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_1/ 2편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_2/ 3편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_3/ Step 02 - 로그인 기능 구현 로그인된 사용자만 이용할 수 있도록 구현 이 때, 현재 사용자가 로그인된 사용자인지 판단하려고 세션 사용 회원 가입 통한 과정 이외에도 정상적인 로그인 과정에서도 세션 처리 진행 Step 03 - 로그인 처리 구현 check - 1 : signin.</description>
    </item>
    
    <item>
      <title>Django - ExcelCalCulator_3</title>
      <link>https://dschloe.github.io/python/2023/08/django_excel_calculator_3/</link>
      <pubDate>Thu, 03 Aug 2023 02:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/08/django_excel_calculator_3/</guid>
      <description>개요 Django 한 그릇 뚝딱 교재의 내용에서 멀티캠퍼스 강의에 맞게 일부 수정함 2019년 버전이고 현재는 2023년이기 때문에 소스코드 변경 사항이 필요할 거 같아서 글을 남김 교재 홍보 교재 구매 : https://www.yes24.com/Product/Goods/83568594 Step 01 - 이전 글 1편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_1/ 2편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_2/ Step 02 - 인증하기 구현 자신의 이메일로 발송된 인증 코드를 입력한 후, “인증하기” 버튼을 누르면, main app 의 [views.py](http://views.py) 파일에 만들어 놓은 verify 함수로 오도록 설정한다. verifyCode.html url을 설정한다.</description>
    </item>
    
    <item>
      <title>Django - ExcelCalCulator_2</title>
      <link>https://dschloe.github.io/python/2023/08/django_excel_calculator_2/</link>
      <pubDate>Thu, 03 Aug 2023 01:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/08/django_excel_calculator_2/</guid>
      <description>개요 Django 한 그릇 뚝딱 교재의 내용에서 멀티캠퍼스 강의에 맞게 일부 수정함 2019년 버전이고 현재는 2023년이기 때문에 소스코드 변경 사항이 필요할 거 같아서 글을 남김 교재 홍보 교재 구매 : https://www.yes24.com/Product/Goods/83568594 Step 01 - 이전 글 1편 : https://dschloe.github.io/python/2023/08/django_excel_calculator_1/ Step 02 - 이메일 인증으로 회원 가입 절차는 다음과 같다. 회원 가입 화면에서 개인정보 입력 후 회원 가입하기 버튼 클릭 때 해당 정보로 유저 데이터 생성 및 DB에 저장, 이 때 인증되지 않은 유저로 등록 DB에 저장 후, 입력한 이메일로 인증 코드 발송 발송된 인증 코드는 유저 이름과 함께 쿠키로 저장 후 인증 코드 입력 화면으로 전환 인증 코드 입력 화면에서 인증 코드 입력 후 인증하기 버튼 클릭 때 입력된 코드와 쿠키에 저장된 인증 코드 비교 후 회원 성공/실패 처리 성공 때는 회원의 인증 값을 true 로 설정, 실패 때 해당 회원정보 삭제 Step 03 - DB 설정 사용자 정보를 저장할 수 있는 모델을 만들어야 한다.</description>
    </item>
    
    <item>
      <title>Django - ExcelCalCulator_1</title>
      <link>https://dschloe.github.io/python/2023/08/django_excel_calculator_1/</link>
      <pubDate>Thu, 03 Aug 2023 00:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/08/django_excel_calculator_1/</guid>
      <description>개요 Django 한 그릇 뚝딱 교재의 내용에서 멀티캠퍼스 강의에 맞게 일부 수정함 2019년 버전이고 현재는 2023년이기 때문에 소스코드 변경 사항이 필요할 거 같아서 글을 남김 교재 홍보 교재 구매 : https://www.yes24.com/Product/Goods/83568594 Step 01 - Github Repo 생성 아래와 같이 Github Repo를 생성한다. Step 02 - 가상환경 생성 및 라이브러리 설치 virtualenv 명령어를 활용하여 가상환경을 설치한다. 실행 경로 : ExcelCalculate-with-Django $ virtualenv venv created virtual environment CPython3.9.13.final.0-64 in 2305ms creator CPython3Windows(dest=C:\Users\j2hoo\OneDrive\Desktop\ExcelCalculate-with-Django\venv, clear=False, no_vcs_ignore=False, global=False) seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=C:\Users\j2hoo\AppData\Local\pypa\virtualenv) added seed packages: pip==23.</description>
    </item>
    
    <item>
      <title>Django Gmail 발송 예제 (2023년 버전)</title>
      <link>https://dschloe.github.io/python/2023/07/django_email_sample/</link>
      <pubDate>Thu, 27 Jul 2023 00:01:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/07/django_email_sample/</guid>
      <description>개요 최근 django 강의를 진행하면서, Gmail로 이메일을 발송 하는 예제에서 인증 코드 진행하는 부분이 오래된 것을 확인 업그레이드 된 버전을 소개한다. 가상환경 및 django 라이브러리 설치 먼저 빈 폴더를 생성 후, 가상환경을 생성한다. (옵션) virtualenv 라이브러리 미 설치 시 $ pip install virtualenv 기 설치가 되어 있다면 아래 코드를 순차적으로 실행한다. $ virtualenv venv $ source venv/Scripts/activate 가상환경에 접속해 있다면 django를 설치 한다. $ pip install django 장고 프로젝트 및 앱 설치 이제 장고 프로젝트를 설정한다.</description>
    </item>
    
    <item>
      <title>Django Project ToDoList - 5</title>
      <link>https://dschloe.github.io/python/2023/07/django_todolist_5/</link>
      <pubDate>Wed, 26 Jul 2023 00:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/07/django_todolist_5/</guid>
      <description>개요 Django 한 그릇 뚝딱 교재의 내용에서 멀티캠퍼스 강의에 맞게 일부 수정함 2019년 버전이고 현재는 2023년이기 때문에 소스코드 변경 사항이 필요할 거 같아서 글을 남김 교재 홍보 교재 구매 : https://www.yes24.com/Product/Goods/83568594 Step 01 - 이전 내용 확인 이 글을 처음 봤다면, 이전 블로그를 참조하기를 바란다. 첫번째 글 : https://dschloe.github.io/python/2023/07/django_todolist_1/ 두번째 글 : https://dschloe.github.io/python/2023/07/django_todolist_2/ 세번째 글 : https://dschloe.github.io/python/2023/07/django_todolist_3/ 네번째 글 : https://dschloe.github.io/python/2023/07/django_todolist_4/ Step 02 - 데이터 삭제 방법 개요 및 HTML 수정 완료 버튼을 눌렀을 시, 데이터를 삭제하는 기능을 구현한다.</description>
    </item>
    
    <item>
      <title>Django Project ToDoList - 4</title>
      <link>https://dschloe.github.io/python/2023/07/django_todolist_4/</link>
      <pubDate>Wed, 26 Jul 2023 00:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/07/django_todolist_4/</guid>
      <description>개요 Django 한 그릇 뚝딱 교재의 내용에서 멀티캠퍼스 강의에 맞게 일부 수정함 2019년 버전이고 현재는 2023년이기 때문에 소스코드 변경 사항이 필요할 거 같아서 글을 남김 교재 홍보 교재 구매 : https://www.yes24.com/Product/Goods/83568594 Step 01 - 이전 내용 확인 이 글을 처음 봤다면, 이전 블로그를 참조하기를 바란다. 첫번째 글 : https://dschloe.github.io/python/2023/07/django_todolist_1/ 두번째 글 : https://dschloe.github.io/python/2023/07/django_todolist_2/ 세번째 글 : https://dschloe.github.io/python/2023/07/django_todolist_3/ Step 02 - 남은 과제 사용자가 입력한 문자열을 데이터베이스에 저장하기 DB에 저장된 내용을 보여 주기 Step 03 - 모델에 데이터 저장 먼저, my_to_do_app 폴더에 있는 [views.</description>
    </item>
    
    <item>
      <title>Django Project ToDoList - 3</title>
      <link>https://dschloe.github.io/python/2023/07/django_todolist_3/</link>
      <pubDate>Wed, 26 Jul 2023 00:20:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/07/django_todolist_3/</guid>
      <description>개요 Django 한 그릇 뚝딱 교재의 내용에서 멀티캠퍼스 강의에 맞게 일부 수정함 2019년 버전이고 현재는 2023년이기 때문에 소스코드 변경 사항이 필요할 거 같아서 글을 남김 교재 홍보 교재 구매 : https://www.yes24.com/Product/Goods/83568594 Step 01 - 이전 내용 확인 이 글을 처음 봤다면, 이전 블로그를 참조하기를 바란다. 첫번째 글 : https://dschloe.github.io/python/2023/07/django_todolist_1/ 두번째 글 : https://dschloe.github.io/python/2023/07/django_todolist_2/ Step 02 - model.py 작성 및 장고 서버 반영 ToDo에 대한 데이터를 다룰 예정이며, 다음과 같이 코드를 작성한다.</description>
    </item>
    
    <item>
      <title>Django Project ToDoList - 2</title>
      <link>https://dschloe.github.io/python/2023/07/django_todolist_2/</link>
      <pubDate>Wed, 26 Jul 2023 00:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/07/django_todolist_2/</guid>
      <description>개요 Django 한 그릇 뚝딱 교재의 내용에서 멀티캠퍼스 강의에 맞게 일부 수정함 2019년 버전이고 현재는 2023년이기 때문에 소스코드 변경 사항이 필요할 거 같아서 글을 남김 교재 홍보 교재 구매 : https://www.yes24.com/Product/Goods/83568594 Step 01 - 이전 내용 확인 이 글을 처음 봤다면, 이전 블로그를 참조하기를 바란다. 첫번째 글 : https://dschloe.github.io/python/2023/07/django_todolist_1/ Step 02 - HTML 템플릿 사용 HTML과 CSS가 적용된 기본 템플릿은 다음 github 저장소에서 다운로드 받을 수 있다.
책 저자 깃허브 : https://github.</description>
    </item>
    
    <item>
      <title>Django Project ToDoList - 1</title>
      <link>https://dschloe.github.io/python/2023/07/django_todolist_1/</link>
      <pubDate>Tue, 25 Jul 2023 00:01:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/07/django_todolist_1/</guid>
      <description>개요 Django 한 그릇 뚝딱 교재의 내용에서 멀티캠퍼스 강의에 맞게 일부 수정함 2019년 버전이고 현재는 2023년이기 때문에 소스코드 변경 사항이 필요할 거 같아서 글을 남김 교재 홍보 교재 구매 : https://www.yes24.com/Product/Goods/83568594 Step 01 - 깃허브 Repo 생성 아래와 같이 깃허브에서 Repo를 생성한다. Repo명 : ToDoList-with-Django Step 02 - 바탕화면으로 Git Clone 이 때 중요한 것은 본인 경로에 한글이 없도록 하는 것이 중요하다. 간혹 한글이 있는 경우 인코딩 문제로 라이브러리 설치 등 되지 않을 수가 있다.</description>
    </item>
    
    <item>
      <title>django Web 개발 - IRIS Prediction</title>
      <link>https://dschloe.github.io/python/django/django_iris_sklearn/</link>
      <pubDate>Sat, 25 Jun 2022 10:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/django/django_iris_sklearn/</guid>
      <description>개요 Python Django와 Sklearn을 활용하여 간단한 iris prediction 웹을 만들어본다. 사전준비 머신러닝 기본 이론 및 원리는 어느정도 알고 있다고 가정한다. Django 앱에 대해 어느정도 알고 있다고 가정한다. 무엇을 배우는가? 머신러닝 모델을 활용하여 배포하는 과정을 배운다. 가상환경 설정 가상환경을 생성한다. $ virtualenv venv created virtual environment CPython3.9.1.final.0-64 in 475ms creator CPython3Posix(dest=/Users/evan/Desktop/django-iris-tutorial/venv, clear=False, no_vcs_ignore=False, global=False) seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/Users/evan/Library/Application Support/virtualenv) added seed packages: pip==22.1.1, setuptools==62.3.2, wheel==0.37.1 activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator 만들어진 가상환경에 접속한다.</description>
    </item>
    
    <item>
      <title>Django with Elastic Beanstalk - Settings</title>
      <link>https://dschloe.github.io/aws/03_elastic_beanstalk/ch01_eb_django_settings/</link>
      <pubDate>Sun, 22 May 2022 10:13:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/aws/03_elastic_beanstalk/ch01_eb_django_settings/</guid>
      <description>한줄 요약 생각보다 쉽지 않기 때문에 Windows로 하기 보다는 WSL2로 하는 것을 권한다. 이 부분은 추후 업데이트 할 예정이다. Windows에 EB CLI 설치 공식 문서 : https://docs.aws.amazon.com/ko_kr/elasticbeanstalk/latest/dg/eb-cli3-install-windows.html
우선 기존 아나콘다로 파이썬 환경이 구축되어 있다면, 아나콘다를 삭제하고 진행한다.
3.8 버전 이상으로 하면, 배포 시 생각보다 잘 되지 않을 가능성이 크다. 필자는 Python 버전도 3.7로 재 설치 했다.
C:\WINDOWS\system32&amp;gt;python --version Python 3.7.4 C:\WINDOWS\system32&amp;gt;pip --version pip 19.0.3 from c:\users\human\appdata\local\programs\python\python37-32\lib\site-packages\pip (python 3.7) pip을 이용하여 EB CLI를 설치한다.</description>
    </item>
    
    <item>
      <title>django Web 개발 1 - 기본 설정</title>
      <link>https://dschloe.github.io/python/django/django_01/</link>
      <pubDate>Sat, 07 May 2022 20:10:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/django/django_01/</guid>
      <description>프로젝트 개요 Python Django로 To-do List를 만들어본다. 파이썬 설치 파이썬 설치는 Anaconda 또는 Python 홈페이지에서 직접 설치한다. Anaconda : https://www.anaconda.com/ Python : https://www.python.org/ 가상환경 설치 파이썬 설치가 끝났다면, 해당 깃허브를 다운로드 받는다. $ git clone https://github.com/dschloe/django_to_do.git django_to_do 폴더에 진입 후 아래와 같이 실행한다. $ cd django_to_do $ virtualenv venv created virtual environment CPython3.9.7.final.0-64 in 7884ms creator CPython3Windows(dest=C:\Users\human\Desktop\django_to_do\venv, clear=False, no_vcs_ignore=False, global=False) seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=C:\Users\human\AppData\Local\pypa\virtualenv) added seed packages: pip==22.</description>
    </item>
    
  </channel>
</rss>
