<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>S3 on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/tags/s3/</link>
    <description>Recent content in S3 on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Jun 2025 09:13:30 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/tags/s3/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS EC2 Connect to S3, Streamlit Web (2025 june)</title>
      <link>https://dschloe.github.io/aws/2025/06/aws_ec2_s3_streamlit/</link>
      <pubDate>Sun, 15 Jun 2025 09:13:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/aws/2025/06/aws_ec2_s3_streamlit/</guid>
      <description>개요 EC2 접속을 할 수 있다. EC2에서 개발환경 설정을 할 수 있다. 회원가입 링크 : https://aws.amazon.com/console/ 아래 화면, 우측 상단을 보면 English를 Korean으로 변경 아래 화면에서 AWS 계정 생성 버튼 클릭 링크 : https://aws.amazon.com/ko/console/ 회원가입 진행 재 로그인 IAM user sign in Account ID : 12자리 숫자로 AWS 계정을 식별하는 고유 값이다. 같은 회사라도 계정마다 ID가 다르다. IAM User : 각 IAM User는 별도 패스워드·액세스키를 갖고, 정책으로 권한을 제한 Sign In 가입 EC2 생성 EC2 검색 및 클릭 인스턴스 시작 화면 가운데 인스턴스 시작 버튼 클 이름 : lgu-streamlit-server01 Ubuntu 설정 OS 이미지는 기본값 적용 새 키 페어 생성 키 페어 이름 : lgu-streamlit-server01 키 페어 생성 버튼 클릭 시, 프로젝트 경로에 위치 시킬 것 네트워크 설정 위 그림에서 편집 선택 및 다음과 같이 설정 (인바운드 보안 그룹 규칙) 스토리지 구성은 30GiB 정도로 진행 최종적으로 인스턴스 시작 버튼 클릭 다음과 같은 화면에서 인스턴스에 연결버튼 클릭 EC2 인스턴스에 연결 탭에서 연결 버튼 클릭 SSH 클라이언트 탭 클릭 VS Code에서 Extension 패키지인 Remote SSH 활용 할 것임 VS Code에서 Remote 접속 단축키 Shift+Ctrl+P, &amp;ldquo;&amp;gt;REMOTE SSH CONNECT TO HOST” Configure SSH Hosts 선택 C:\User\user.</description>
    </item>
    
    <item>
      <title>Amazon SageMaker ML on Local Machine via VS Code</title>
      <link>https://dschloe.github.io/aws/2025/03/amazon_sagemaker_vscode_example/</link>
      <pubDate>Mon, 10 Mar 2025 09:13:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/aws/2025/03/amazon_sagemaker_vscode_example/</guid>
      <description>개요 AWS SageMaker 사용하여 ML 코드 생성 VS Code에서 코드 생성 S3 Bucket에서 모델 업로드 및 다운로드 응용하여 테스트 진행 코드 사전조건 SageMaker가 정상적으로 실행되려면 Docker가 필요할 수 있기, Docker를 먼저 설치하기를 바란다. AWS &amp;amp; SageMaker 연결 설정 I AM 에서 사용자에서 생성한다.
참고 : https://dschloe.github.io/aws/2025/03/connect2ec2viaawstoolkit/ Access Key까지 같이 생성한다.
사용자에 대한 I AM Role 도 생성한다.
awsMLDLRole 역할 이름을 부여했다.
Local PC 설정 Access Key와 Security Key 입력 $ aws configure AWS Access Key ID [****************BIGP]: AWS Secret Access Key [****************/5l8]: Default region name [us-east-1]: Default output format [json]: 만약 Default region name 변경을 원한다면 vi 편집기로 변경한다.</description>
    </item>
    
    <item>
      <title>S3 with Python Basic Tutorial</title>
      <link>https://dschloe.github.io/aws/04_s3/s3_basic/</link>
      <pubDate>Mon, 30 May 2022 10:13:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/aws/04_s3/s3_basic/</guid>
      <description>Bucket 만들기 Bucket을 만들어보도록 한다. import boto3 print(boto3.__version__) 1.23.5 bucket = boto3.resource(&amp;#39;s3&amp;#39;) response = bucket.create_bucket( Bucket = &amp;#34;your_bucket_name&amp;#34;, ACL=&amp;#34;private&amp;#34;, # public-read CreateBucketConfiguration = { &amp;#39;LocationConstraint&amp;#39; : &amp;#39;ap-northeast-2&amp;#39; } ) print(response) s3.Bucket(name=&#39;your_bucket_name&#39;) 버킷 대시보드에서 실제 Bucket이 만들어졌는지 확인한다. Client Bucket 이번에는 client 버킷을 생성한다. client = boto3.client(&amp;#39;s3&amp;#39;) response = client.create_bucket( Bucket = &amp;#34;your_bucket_name&amp;#34;, ACL = &amp;#34;private&amp;#34;, CreateBucketConfiguration = { &amp;#39;LocationConstraint&amp;#39; : &amp;#39;ap-northeast-2&amp;#39; } ) print(response) {&#39;ResponseMetadata&#39;: {&#39;RequestId&#39;: &#39;1X0BAXRG653Q7Y61&#39;, &#39;HostId&#39;: &#39;WwKyxNBcd1V9x6D/WZn8twMKSWKBnkwVCPWtvarZvyNSSvqr7Q77J6OFAdWuYAwiv/nQfXoW/0U=&#39;, &#39;HTTPStatusCode&#39;: 200, &#39;HTTPHeaders&#39;: {&#39;x-amz-id-2&#39;: &#39;WwKyxNBcd1V9x6D/WZn8twMKSWKBnkwVCPWtvarZvyNSSvqr7Q77J6OFAdWuYAwiv/nQfXoW/0U=&#39;, &#39;x-amz-request-id&#39;: &#39;1X0BAXRG653Q7Y61&#39;, &#39;date&#39;: &#39;Wed, 25 May 2022 03:16:52 GMT&#39;, &#39;location&#39;: &#39;http://your_bucket_name.</description>
    </item>
    
    <item>
      <title>AWS 개발환경 설정 - WSL2 &amp; S3 &amp; RDS</title>
      <link>https://dschloe.github.io/aws/01_settings/settings/</link>
      <pubDate>Thu, 26 May 2022 10:13:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/aws/01_settings/settings/</guid>
      <description>개요 윈도우 WSL2에서 AWS 개발을 위한 기본 개발환경 설정을 진행한다. WSL2 설치 WSL2 설치 및 사용법은 다음 링크를 통해서 확인한다. (여기서 설치법은 다루지 않는다!) URL : https://www.lainyzine.com/ko/article/how-to-install-wsl2-and-use-linux-on-windows-10/ Restart WSL2 WSL2 처음 작업할 때, 실행한다. exec $SHELL WSL2 주요 필수 패키지 설치 Python 3.8 버전을 설치한다. sudo apt update sudo apt install software-properties-common sudo add-apt-repository ppa:deadsnakes/ppa sudo apt install python3.7 Python 버전은 다음과 같다. $ python3 --version Python 3.8.10 만약 Python 버전 변경이 안되면 전체 삭제하고 진행한다.</description>
    </item>
    
  </channel>
</rss>
