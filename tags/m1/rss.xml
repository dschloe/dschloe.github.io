<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>M1 on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/tags/m1/</link>
    <description>Recent content in M1 on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Mar 2025 04:00:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/tags/m1/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Oracle 19c Installation Using Docker on M1</title>
      <link>https://dschloe.github.io/settings/2025/03/oracle_installation_19c_m1/</link>
      <pubDate>Sat, 15 Mar 2025 04:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/2025/03/oracle_installation_19c_m1/</guid>
      <description>개요 Docker 활용해서 Oracle 설치하기 on M1 SQL Developer 활용해서 접속 및 테스트하기 사전조건 Docker가 이미 설치가 되어 있다고 가정한다. Oracle Database 설치 순서 Step 01 : 도커 이미지 가져오기 Clone Oracle&amp;rsquo;s Docker Images Repository, Open your terminal and run git clone https://github.com/oracle/docker-images Step 02 : Oracle Database 19c 파일 다운로드 Download Oracle Database 19c for Linux ARM 링크 : https://www.oracle.com/database/technologies/oracle19c-linux-arm64-downloads.html (회원가입 필요) 다운로드, LINUX.ARM64_1919000_db_home.zip 해당 파일을 docker-images/OracleDatabase/SingleInstance/dockerfiles/19.3.0 디렉토리에 위치 시킴 Step 03 : 도커 이미지 빌드 Build the Docker Image, Navigate to the dockerfiles directory 터미널로 경로 이동한다.</description>
    </item>
    
    <item>
      <title>Ubuntu install on M1</title>
      <link>https://dschloe.github.io/settings/2024/05/ubuntu_install_m1/</link>
      <pubDate>Tue, 21 May 2024 01:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/2024/05/ubuntu_install_m1/</guid>
      <description>개요 M1에서 Ubuntu를 설치하는 방법에 대해 기술한다. Ubuntu 24.04 LTS 다운로드 Ubuntu Download를 진행한다. 다운로드 받을 시, arm으로 다운로드 받아야 한다. 다른 아키텍처로 다운로드 받을 시 리눅스가 활성화가 되지 않는다. 사이트 : https://ubuntu.com/download/server/arm 최신버전의 경우 잘 되지 않을수도 있다. 따라서 22.04.04 버전으로 변경하였다. 사이트 : https://cdimage.ubuntu.com/releases/22.04.4/release/ UTM 다운로드 사이트 : https://mac.getutm.app/ UTM 가상머신 생성 UTM을 실행하면 아래와 같은 화면이 나온다. Create a New Virtual Machine을 선택한다. 아래화면에서 Virtualize를 선택한다. 아래화면에서 Linux를 선택한다.</description>
    </item>
    
    <item>
      <title>MySQL 삭제, 재설치 가이드 on M1</title>
      <link>https://dschloe.github.io/sql/2024/04/mysql_delete_reinstall/</link>
      <pubDate>Tue, 02 Apr 2024 10:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/2024/04/mysql_delete_reinstall/</guid>
      <description>개요 M1에서 MySQL을 설치 하고 Workbench에 접속하는 과정을 설명한다. 데이터 로드 시, ASCII 에러 과정 해결하는 방법도 살펴본다. (임시방편) 사전학습 brew 명령어를 알고 있는 분에 한해 작성을 하였다. 주의 아래 코드 복사할 시, $ 는 제외 후 복사한다. MySQL 실행 확인 후 프로세스 Kill 먼저 MySQL이 실행중인지를 확인한다. $ brew services list Name Status User File mysql started evan ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist 서비스를 강제 종료한다. $ brew services stop mysql Stopping `mysql`... (might take a while) ==&amp;gt; Successfully stopped `mysql` (label: homebrew.</description>
    </item>
    
    <item>
      <title>MySQL Workbench File Import Error in Mac</title>
      <link>https://dschloe.github.io/sql/2023/10/mysql_import_error_mac/</link>
      <pubDate>Wed, 04 Oct 2023 10:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/2023/10/mysql_import_error_mac/</guid>
      <description>개요 MySQL Workbench에서 File을 불러올 때 에러가 발생했을 때 대처 요령을 소개한다. Workbench에서 File을 불러올 때 가끔 아래와 같은 아래가 발생하곤 한다. 해결방법은 MySQL Shell Script에서 직접 파일을 불러오는 방식이다. MySQL 재접속 기존에 Workbench에 접속해 있었다면 우선 종료를 한다. 재접속 전 Edit Connection 버튼을 클릭한다.
Advanced Tab을 클릭한다.
Others 메뉴에서 OPT_LOCAL_INFILE=1 을 입력한다. Test Connection 버튼을 클릭하여 정상적으로 접속이 되는지 재 확인한다. 이제 재 접속을 하면 Workbench의 설정은 완료가 되었다. Schema 및 Table 생성 마우스 우클릭 후 스키마를 생성한다.</description>
    </item>
    
    <item>
      <title>M1 환경설정 XGBoost &amp; LightGBM with Streamlit in Python</title>
      <link>https://dschloe.github.io/python/2023/09/m1_settings_xgboost_lightgbm/</link>
      <pubDate>Fri, 01 Sep 2023 11:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/09/m1_settings_xgboost_lightgbm/</guid>
      <description>개요 M1에서 Python 환경설정을 해본다. XGBoost &amp;amp; LightGBM 및 Streamlit 설치를 진행한다. 아나콘다 설치 m1 버전의 아나콘다를 설치한다. 깃헙 레포 생성 먼저 github repo를 생성한다. Conda 가상환경 설정 git clone 명령어를 통해 repo를 로컬로 다운로드 한다. evan$ git clone https://github.com/yourname/m1_streamlit.git Cloning into &amp;#39;m1_streamlit&amp;#39;... remote: Enumerating objects: 4, done. remote: Counting objects: 100% (4/4), done. remote: Compressing objects: 100% (3/3), done. remote: Total 4 (delta 0), reused 0 (delta 0), pack-reused 0 Receiving objects: 100% (4/4), done.</description>
    </item>
    
    <item>
      <title>M1 Mac Tensorflow Installation in R</title>
      <link>https://dschloe.github.io/r/r_settings/m1_tensorflow/</link>
      <pubDate>Tue, 16 Nov 2021 17:20:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/r/r_settings/m1_tensorflow/</guid>
      <description>개요 M1 Mac에서 텐서플로를 설치 한다. 필자의 현재 M1 환경은 아래와 같다. sessionInfo() R version 4.1.2 (2021-11-01) Platform: aarch64-apple-darwin20 (64-bit) Running under: macOS Big Sur 11.6 Matrix products: default LAPACK: /Library/Frameworks/R.framework/Versions/4.1-arm64/Resources/lib/libRlapack.dylib locale: [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 attached base packages: [1] stats graphics grDevices utils datasets methods base other attached packages: [1] ggplot2_3.3.5 dplyr_1.0.7 tfdatasets_2.7.0 keras_2.7.0 [5] reticulate_1.22 tensorflow_2.7.0 loaded via a namespace (and not attached): [1] Rcpp_1.0.7 compiler_4.1.2 pillar_1.6.4 prettyunits_1.1.1 [5] base64enc_0.1-3 tools_4.</description>
    </item>
    
    <item>
      <title>ml 개발환경 세팅</title>
      <link>https://dschloe.github.io/settings/m1_settings/</link>
      <pubDate>Thu, 21 Jan 2021 01:11:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/m1_settings/</guid>
      <description>개요 M1에서 GPU를 활용한 딥러닝을 수행하는 예제 코드를 구현해봤다.
참고: M1 tensorflow Test Preview Apple 공식 Repo대로 설치를 하면 잘 될 것이라 생각했지만, 생각지 못한 복병을 만났다.
어떻게 해결했는지 그 과정에 대해 잠깐 기술하려고 한다.
Rosetta 너는 누구니? 그동안 맥북은 인텔 기반의 Mac 프로세서를 사용해왔고, M1은 애플이 개발한 프로세서를 처음 도입한 것이다. 그런데, 이게 왜 문제가 되는 것일까? </description>
    </item>
    
    <item>
      <title>M1 tensorflow Test Preview</title>
      <link>https://dschloe.github.io/python/tensorflow2.0/m1_tensorflow/</link>
      <pubDate>Sun, 17 Jan 2021 21:20:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/tensorflow2.0/m1_tensorflow/</guid>
      <description>개요 M1에서 Tensorflow 테스트를 진행해본다. 현재 M1 시스템 환경은 아래와 같다. (2021-01-16) 주의: 텐서플로 공식 버전은 아님
라이브러리 설치 다음 코드를 설치해본다. Apple 공식 Repo: https://github.com/apple/tensorflow_macos 실행 전, 필수 체크 사항 macOS 11.0+ Python 3.8, available from the Xcode Command Line Tools $ /bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/apple/tensorflow_macos/master/scripts/download_and_install.sh)&amp;#34; Installation script for pre-release tensorflow_macos 0.1alpha1. Please visit https://github.com/apple/tensorflow_macos for instructions and license information. This script will download tensorflow_macos 0.1alpha1 and needed binary dependencies, then install them into a new or existing Python 3.</description>
    </item>
    
  </channel>
</rss>
