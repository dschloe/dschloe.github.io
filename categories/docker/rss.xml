<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/categories/docker/</link>
    <description>Recent content in Docker on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Mar 2025 04:00:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/categories/docker/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Oracle 19c Installation Using Docker on M1</title>
      <link>https://dschloe.github.io/settings/2025/03/oracle_installation_19c_m1/</link>
      <pubDate>Sat, 15 Mar 2025 04:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/2025/03/oracle_installation_19c_m1/</guid>
      <description>개요 Docker 활용해서 Oracle 설치하기 on M1 SQL Developer 활용해서 접속 및 테스트하기 사전조건 Docker가 이미 설치가 되어 있다고 가정한다. Oracle Database 설치 순서 Step 01 : 도커 이미지 가져오기 Clone Oracle&amp;rsquo;s Docker Images Repository, Open your terminal and run git clone https://github.com/oracle/docker-images Step 02 : Oracle Database 19c 파일 다운로드 Download Oracle Database 19c for Linux ARM 링크 : https://www.oracle.com/database/technologies/oracle19c-linux-arm64-downloads.html (회원가입 필요) 다운로드, LINUX.ARM64_1919000_db_home.zip 해당 파일을 docker-images/OracleDatabase/SingleInstance/dockerfiles/19.3.0 디렉토리에 위치 시킴 Step 03 : 도커 이미지 빌드 Build the Docker Image, Navigate to the dockerfiles directory 터미널로 경로 이동한다.</description>
    </item>
    
    <item>
      <title>Docker-Compose와 Dockerfile을 활용한 Flask-MySQL 연동 예제</title>
      <link>https://dschloe.github.io/mlops/2024/07/docker_compose_dockerfile_flask_mysql/</link>
      <pubDate>Tue, 02 Jul 2024 10:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/mlops/2024/07/docker_compose_dockerfile_flask_mysql/</guid>
      <description>개요 Docker-Compose와 Dockerfile의 주요 기능을 이해한다. 각 파일의 위치와 주요 기능을 이해한다. 전체 프로젝트 파일 디렉터리 본 프로젝트의 전체 코드는 다음과 같다. 실제 코드 작성을 해야하는 곳은 다음과 같다. app.py requirements.txt init.sql docker-compose.yml Dockerfile docker_kubernetes_flask/ ├── app/ │ ├── __init__.py │ ├── app.py │ └── requirements.txt ├── db/ │ ├── init.sql │ └── data/ (This will be created by Docker) ├── docker-compose.yml └── Dockerfile 사전준비 사전에 Docker는 Desktop 설치가 되어 있다고 가정한다.</description>
    </item>
    
    <item>
      <title>Docker Streamlit Sample</title>
      <link>https://dschloe.github.io/settings/2023/2/docker_streamlit_app_windows10/</link>
      <pubDate>Wed, 15 Feb 2023 00:01:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/2023/2/docker_streamlit_app_windows10/</guid>
      <description>개요 도커를 활용하여 Streamlit 배포를 진행해본다. Dockerfile의 의미에 대해 이해한다. Dockerfile Docker 이미지를 빌드하기 위한 일련의 명령어를 포함하는 텍스트 파일 컨테이너에서 애플리케이션이 실행될 때 필요한 환경과 종속성을 정의하는 방법을 제공 패키지 설치, 파일 복사 및 환경 변수 설정 등의 지시어가 포함 사전준비 github에 sample 프로젝트를 올려둔다. 예제 : https://github.com/streamlit/streamlit-example 필자는 독립적으로 github repository를 작성했다. 소스코드 예제 소스코드는 크게 아래와 같이 작성했다. 먼저 app.py는 아래와 같다. import numpy as np import pandas as pd import matplotlib import sklearn import scipy import plotly import streamlit as st def main(): st.</description>
    </item>
    
    <item>
      <title>Docker 기본 문법</title>
      <link>https://dschloe.github.io/settings/2023/2/docker_basic/</link>
      <pubDate>Tue, 14 Feb 2023 00:01:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/2023/2/docker_basic/</guid>
      <description>무작정 도커 시작하기 docker에 Ubuntu를 설치하고 실행해본다. 현재 파일 목록들을 살펴본다. 빠져 나올 때는 EXIT를 실행한다. C:\Users\human&amp;gt;docker run -it ubuntu:18.04 Unable to find image &amp;#39;ubuntu:18.04&amp;#39; locally 18.04: Pulling from library/ubuntu 72d9f18d70f3: Pull complete Digest: sha256:a3765b4d74747b5e9bdd03205b3fbc4fa19a02781c185f97f24c8f4f84ed7bbf Status: Downloaded newer image for ubuntu:18.04 root@7a7a49e2d83e:/# ls bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var root@7a7a49e2d83e:/# 현재 도커 컨테이너 리스트를 확인한다. $ docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 7a7a49e2d83e ubuntu:18.</description>
    </item>
    
    <item>
      <title>Windows 10 도커 설치 과정 (2022 ver)</title>
      <link>https://dschloe.github.io/settings/windows_docker_install/</link>
      <pubDate>Tue, 05 Apr 2022 14:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/windows_docker_install/</guid>
      <description>개요 주요 참고자료는 다음과 같다. WSL2 설치 : https://www.lainyzine.com/ko/article/how-to-install-wsl2-and-use-linux-on-windows-10/#google_vignette 도커 설치 : https://www.lainyzine.com/ko/article/a-complete-guide-to-how-to-install-docker-desktop-on-windows-10/ Step 1. WSL2 설치 과정 Windows PowerShell 관리자로 실행 후 다음 명령어 입력 $ dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart $ dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart 위 명령어 실행 후, 재부팅 필수 x64 머신용 최신 WSL2 Linux 커널 업데이트 패키지를 다운로드 받아 안내에 따라 설치합니다. Windows Powershell 열고 아래 코드 실행 $ wsl --set-default-version 2 WSL 2와의 주요 차이점에 대한 자세한 내용은 https://aka.</description>
    </item>
    
    <item>
      <title>AirFlow ch01. 개요</title>
      <link>https://dschloe.github.io/mlops/ch04_airflow/airflow_00_intro/</link>
      <pubDate>Fri, 09 Jul 2021 14:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/mlops/ch04_airflow/airflow_00_intro/</guid>
      <description>인프런 강의 취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다. 스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다. [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기 공지 Airflow 2.0 원서 나온 것을 공부용으로 활용합니다. Airflow Project 이 책에 나온 내용을 Chapter별로 요약하여 정리하려고 한다. 원서 구매 페이지는 아래와 같다. 구매 페이지: Data Pipelines with Apache Airflow Chapter 1. Apache Airflow Introduction Figure 1.</description>
    </item>
    
    <item>
      <title>AirFlow 설치 및 실행 with M1</title>
      <link>https://dschloe.github.io/mlops/ch04_airflow/airflow_01/</link>
      <pubDate>Thu, 08 Jul 2021 14:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/mlops/ch04_airflow/airflow_01/</guid>
      <description>인프런 강의 취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다. 스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다. [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기 미니 프로젝트 개요 목적: Airflow와 빅쿼리를 활용하여 ETL 및 대시보드를 만들어보는 과정을 설계 환경: MacOS M1 Part I. Docker and Airflow Docker와 Airflow를 설치 및 실행한다.
필자는 가상환경을 선정하고, 그 위에 도커를 추가로 설치하였다.</description>
    </item>
    
    <item>
      <title>[MLOps] Weight &amp; Biases 소개 및 사용 방법</title>
      <link>https://dschloe.github.io/mlops/wandb/install/</link>
      <pubDate>Sat, 29 May 2021 09:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/mlops/wandb/install/</guid>
      <description>인프런 강의 취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다. 스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다. [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기 1줄 요약 wandb로 MLOps를 배워봅니다. References Weight &amp;amp; Biases(wandb) 사용법(wandb 설치 및 설명) by greeksharifa 초기 설정 싸이트: https://wandb.ai/site
회원가입을 한 뒤, 가장 먼저 나오는 화면은 아래 대시보드 입니다. 참조: 필자는 Mac M1을 사용하는 중입니다.</description>
    </item>
    
    <item>
      <title>Custom Containers with AI Platform Training</title>
      <link>https://dschloe.github.io/mlops/ch03_running_ai_platform_pipelines/ch01_using_custom_containers_with_ai_platform_training/</link>
      <pubDate>Wed, 05 May 2021 14:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/mlops/ch03_running_ai_platform_pipelines/ch01_using_custom_containers_with_ai_platform_training/</guid>
      <description>인프런 강의 취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다. 스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다. [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기 1줄 요약 UCI Machine Learning Repository 데이터를 활용해서 MLOps를 구축해본다. 본 장에서는 MLOps의 간단한 흐름을 파악하는데 주력한다. 실제로는 하나부터 열까지 모든 코드를 따 짜야 한다. 관련 내용은 추후에 여유가 될 때 업데이트를 해보도록 한다. 감사 인사 God Google 감사합니다.</description>
    </item>
    
    <item>
      <title>GCP Kubernetes Engine을 통한 배포(2)</title>
      <link>https://dschloe.github.io/mlops/ch02_kubernetes/ch02_creating_kubernetes_engine_deployments/</link>
      <pubDate>Tue, 13 Apr 2021 19:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/mlops/ch02_kubernetes/ch02_creating_kubernetes_engine_deployments/</guid>
      <description>인프런 강의 취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다. 스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다. [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기 1줄 요약 (GCP) GKE를 활용하여 nginx를 실행해보자. Step 1. GCP Shell 활성화 You can list the active account name with this command: (your_project_id)$ gcloud auth list Credentialed Accounts ACTIVE ACCOUNT * student-04-e46af1f1cd7b@qwiklabs.net To set the active account, run: $ gcloud config set account `ACCOUNT` You can list the project ID with this command: (your_project_id)$ gcloud config list project [core] project = qwiklabs-gcp-04-79efc1e4ae0f Your active configuration is: [cloudshell-24251] Step 2.</description>
    </item>
    
    <item>
      <title>GCP Kubernetes Engine을 통한 배포(1)</title>
      <link>https://dschloe.github.io/mlops/ch02_kubernetes/ch01_deploying_kubernetes_engine/</link>
      <pubDate>Thu, 01 Apr 2021 21:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/mlops/ch02_kubernetes/ch01_deploying_kubernetes_engine/</guid>
      <description>인프런 강의 취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다. 스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다. [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기 1줄 요약 (GCP) GKE를 활용하여 nginx를 실행해보자. Step 1. GKE Cluster Setup 네비게이션 메뉴에서 Kubernetes Engine &amp;gt; Clusters를 클릭합니다. 위 화면에서 Create를 클릭합니다.
그 이후에, Cluster 이름은 standard-cluster-1으로 바꾸고, Zone은 us-central1-a로 바꿉니다.
나머지는 모두 Default로 그냥 놔둡니다.</description>
    </item>
    
    <item>
      <title>Docker Started using Cloud Build</title>
      <link>https://dschloe.github.io/mlops/ch01_docker/ch01_working_with_cloud_build/</link>
      <pubDate>Tue, 30 Mar 2021 22:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/mlops/ch01_docker/ch01_working_with_cloud_build/</guid>
      <description>인프런 강의 취준생을 위한 강의를 제작하였습니다. 본 블로그를 통해서 강의를 수강하신 분은 게시글 제목과 링크를 수강하여 인프런 메시지를 통해 보내주시기를 바랍니다. 스타벅스 아이스 아메리카노를 선물로 보내드리겠습니다. [비전공자 대환영] 제로베이스도 쉽게 입문하는 파이썬 데이터 분석 - 캐글입문기 1줄 요약 (GCP) Cloud Build를 활용하여 Docker를 활용해보자. Step 1. API Enabled 클라우드 네비게이션 메뉴에서 APIs &amp;amp; Services를 클릭한다. Enable APIs and Services를 클릭한다. Search for APIs &amp;amp; Services에서 Cloud Build를 입력한다. Cloud Build API를 클릭한 후, Enable 버튼을 클릭한다.</description>
    </item>
    
  </channel>
</rss>
