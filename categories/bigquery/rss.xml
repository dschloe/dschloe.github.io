<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BigQuery on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/categories/bigquery/</link>
    <description>Recent content in BigQuery on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Jun 2025 17:10:30 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/categories/bigquery/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GCP VM Connect to BigQuery using Streamlit (ver. 2025, 06)</title>
      <link>https://dschloe.github.io/gcp/2025/06/gce2bigquery_streamlit_202506/</link>
      <pubDate>Sat, 21 Jun 2025 17:10:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/2025/06/gce2bigquery_streamlit_202506/</guid>
      <description>개요 VM 만들기 Web UI가 일부 변경됨 (추가 진행하기로 함) VM 생성 및 VS Code 연결 VM과 BigQuery 연결 VM 머신 생성 머신 구성 이름과 성능 체크 월별 예상 가격을 체크한다. OS 및 스토리지 Ubuntu - Ubuntu 24.04 LTS 방식으로 진행 (x86/64) 방식 선택 디스크 사이즈 : 25GB 암호화 : Google 관리 암호화 키 선택 데이터 보호 이 부분은 생략하고 넘어간다. 네트워킹 방화벽은 아래와 같이 HTTP &amp;amp; HTTPS 트래픽 허용 보안 액세스 범위 : 모든 Cloud API에 대한 전체 액세스 허용 VM 생성 다음과 같이 만들기 버튼 클릭 고정 IP 할당 VPC 네트워크 &amp;gt; IP 주소 클릭 오른쪽 끝 작업 하단 메뉴 선택 후 고정 IP 주소로 승급 선택 다음과 같이 임의의 이름 지정</description>
    </item>
    
    <item>
      <title>Streamlit with Bigquery On Compute Engine</title>
      <link>https://dschloe.github.io/gcp/2023/09/streamlit_bigquery_gce/</link>
      <pubDate>Fri, 22 Sep 2023 10:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/2023/09/streamlit_bigquery_gce/</guid>
      <description>개요 Streamlit과 Bigquery를 연동하는 코드를 구현한다. 가상환경 설정 부터 VS Code 연동까지 준비가 안되어 있다면 이전 글을 참조하기를 바란다. 만약 GCP가 처음이신 분들은 이전 글을 순차적으로 읽어본다. Spark Installation with GCP (Sept. 2023) Compute Engine with Github in GCP Python Library Installation on Compute Engine in GCP GCP with VS Code SSH Connection gcloud Installation on Windows 11 인스턴스 시작 인스턴스가 중지가 되어 있다면 다시 시작을 한다. BigQuery Client 라이브러리 설치 클라이언트 라이브러리를 설치한다.</description>
    </item>
    
    <item>
      <title>Streamlit 라이브러리를 활용한 배포 - BigQuery 사용</title>
      <link>https://dschloe.github.io/python/2022/12/streamlit_bigquery/</link>
      <pubDate>Fri, 02 Dec 2022 15:15:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2022/12/streamlit_bigquery/</guid>
      <description>개요 Streamlit 라이브러리와 BigQuery를 사용하여 배포를 진행한다. GCP 클라우드 프로젝트 설정 과정은 생략한다. BigQuery API 사용설정 Project API에서 ENABLE APIS AND SERVICES 버튼을 클릭한다. 빅쿼리 API를 탐색한다. 키워드명 : BigQuery API manage 버튼을 클릭한다. 인증키를 다운로드 받도록 한다. (CREATE CREDENTIALS클릭) 아래와 같이 지정 후, 스크롤을 내려서 NEXT 버튼을 클릭한다. 임의의 Service account ID 작성 후, CREATE AND CONTINUE 버튼을 클릭한다. 프로젝트 권한을 부여 후, CONTINUE 버튼을 클릭한다. Done 버튼을 클릭한다. Service Accounts - [우측] Manage keys 버튼 클릭 Create new key 버튼 클릭 JSON 클릭 json 파일을 다운로드 받는다.</description>
    </item>
    
    <item>
      <title>BigQuery ML을 사용한 펭귄 체중 예측</title>
      <link>https://dschloe.github.io/gcp/bigquery/04_bigqueryml/bigquery_ml_penguins_20220121/</link>
      <pubDate>Fri, 21 Jan 2022 10:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/04_bigqueryml/bigquery_ml_penguins_20220121/</guid>
      <description>개요 BigQuery ML을 소개한다. BigQuery ML을 사용하면, 머신러닝 모델을 만들고 또한 실행할 수 있다. 목표 BigQuery ML에서 CREATE MODEL 문을 사용하여 선형회귀 모델 만들기 ML.EVALUATE 함수를 사용하여 ML 모델 평가 ML.PREDICT 함수를 사용하여 ML 모델 예측 주의 사항 BigQuery 비용 관련된 문서는 다음과 같다. BigQuery 가격 책정: https://cloud.google.com/bigquery/pricing BigQuery 가격 책정**:** https://cloud.google.com/bigquery-ml/pricing 1단계: 데이터 세트 만들기 데이터 세트 ID에 bqml_practice 입력 데이터 위치로 미국 US 선택 나머지는 모두 Default로 설정한다. 2단계: 모델 만들기 데이터 소개 먼저 데이터를 소개한다.</description>
    </item>
    
    <item>
      <title>GCP Settings 2022 ver</title>
      <link>https://dschloe.github.io/gcp/bigquery/01_settings/gcp_settings_20220118/</link>
      <pubDate>Tue, 18 Jan 2022 14:00:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/01_settings/gcp_settings_20220118/</guid>
      <description>개요 GCP 빅쿼리를 연동하는 예제를 구현한다. 먼저 빅쿼리를 통해 데이터를 적재하는 예제를 확인한다. 구글 코랩에서 빅쿼리 데이터를 불러온다. 데이터 스튜디오에서 빅쿼리 데이터를 불러온다. 소개 빅쿼리를 소개하는 영상은 유투브에서 검색하면 매우 쉽게 확인할 수 있다. 영상 참조: 데이터 웨어하우스 끝판왕 BigQuery 어디까지 알고 계신가요 Google Cloud 회원가입 준비물 Google 계정 신용카드나 체크카드 (개인적으로 돈이 없는 체크카드 사용 권장) 구글 클라우드 사이트 접속 싸이트: https://cloud.google.com/ 무료 서버 받으려면 아래 화면에서 TRY IT FREE 를 클릭한다.</description>
    </item>
    
    <item>
      <title>(SQL-Tutorial) 데이터 분석을 위한 SQL 레시피와 빅쿼리 사용</title>
      <link>https://dschloe.github.io/gcp/bigquery/03_sql_recipe/01_sql_tutorial_intro/</link>
      <pubDate>Thu, 22 Apr 2021 09:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/03_sql_recipe/01_sql_tutorial_intro/</guid>
      <description>1줄 요약 데이터 분석을 위한 SQL 레시피 교재를 빅쿼리에서 활용해본다.
책 소개 블로그 글 중 잘 정리된 글이 있어 소개합니다. 빅데이터책: 데이터 분석을 위한 SQL 레시피 읽어보았습니다. 실습 준비 도서의 부록/예제소스를 다운로드 하세요.
예제 소스 코드를 열어봅니다. sql 소스코드로 구성이 되어 있는 것을 확인할 수 있습니다.
저자가 말하는 샘플 데이터 내용은 아래와 같습니다. 이번에는 임의의 SQL 파일을 열어서 확인하도록 합니다.
위 이미지에서 보면, Table을 생성하는 형태로 구성이 되어 있는 것을 알 수 있습니다.</description>
    </item>
    
    <item>
      <title>Ch22 Cleaner Null Handling with Coalesce</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch22_cleaner_null_handling_with_coalesce/</link>
      <pubDate>Sun, 14 Jun 2020 22:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch22_cleaner_null_handling_with_coalesce/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch21 Conditional Expressions</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch21_conditional_expressions/</link>
      <pubDate>Thu, 28 May 2020 12:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch21_conditional_expressions/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch20 Logical Operations</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch20_logical_operations/</link>
      <pubDate>Wed, 27 May 2020 20:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch20_logical_operations/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch19 Comparisons Decimal Calculations</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch19_comparisons_decimal_calculations/</link>
      <pubDate>Tue, 26 May 2020 18:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch19_comparisons_decimal_calculations/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch18 Mathematical Functions</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch18_mathematical_functions/</link>
      <pubDate>Mon, 25 May 2020 07:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch18_mathematical_functions/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다.</description>
    </item>
    
    <item>
      <title>Ch17 Types of Functions</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch17_types_of_functions/</link>
      <pubDate>Fri, 22 May 2020 17:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch17_types_of_functions/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch16 Data Types - Numeric types</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch16_data_types_numeric_types/</link>
      <pubDate>Thu, 21 May 2020 07:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch16_data_types_numeric_types/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch15 Outer Join</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch15_outer_join/</link>
      <pubDate>Tue, 19 May 2020 07:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch15_outer_join/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch14 Cross Join</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch14_cross_join/</link>
      <pubDate>Fri, 15 May 2020 17:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch14_cross_join/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch13 Inner Join</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch13_inner_join/</link>
      <pubDate>Fri, 08 May 2020 14:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch13_inner_join/</guid>
      <description>I. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch12 Join Explained</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch12_join_explained/</link>
      <pubDate>Thu, 07 May 2020 14:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch12_join_explained/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch11 Powerful SQL Pattern</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch11_powerful_sql_pattern/</link>
      <pubDate>Sun, 03 May 2020 13:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch11_powerful_sql_pattern/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch10 UNNEST an Array</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch10_unnest_an_array/</link>
      <pubDate>Sat, 02 May 2020 19:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch10_unnest_an_array/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch09 Struct, Tuple</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch09_struct_and_tuple/</link>
      <pubDate>Thu, 30 Apr 2020 15:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch09_struct_and_tuple/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch08_Creating_Arrays_with_Array_AGG</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch08_creating_arrays_with_array_agg/</link>
      <pubDate>Wed, 29 Apr 2020 10:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch08_creating_arrays_with_array_agg/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch07 Arrays &amp; Structs</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch07_split_unnest/</link>
      <pubDate>Mon, 27 Apr 2020 20:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch07_split_unnest/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch06 SQL Aggregates</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch06_sql_aggregates/</link>
      <pubDate>Sun, 26 Apr 2020 11:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch06_sql_aggregates/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch05 Query Essentials(3)</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch05_query_essentials3/</link>
      <pubDate>Sat, 25 Apr 2020 16:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch05_query_essentials3/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch05 Query Essentials(2)</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch05_query_essentials2/</link>
      <pubDate>Fri, 24 Apr 2020 13:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch05_query_essentials2/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch05 Query Essentials(1)</title>
      <link>https://dschloe.github.io/gcp/bigquery/02_basics/ch05_query_essentials1/</link>
      <pubDate>Thu, 23 Apr 2020 18:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/02_basics/ch05_query_essentials1/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch04_bigquery_with_R</title>
      <link>https://dschloe.github.io/gcp/bigquery/01_settings/ch04_bigquery_with_r/</link>
      <pubDate>Tue, 21 Apr 2020 11:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/01_settings/ch04_bigquery_with_r/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, R과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch03_bigquery_with_python</title>
      <link>https://dschloe.github.io/gcp/bigquery/01_settings/ch03_bigquery_with_python/</link>
      <pubDate>Sun, 19 Apr 2020 20:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/01_settings/ch03_bigquery_with_python/</guid>
      <description>1. 구글 클라우드 설정 본격적인 빅쿼리 실습에 앞서서, Python과 연동하는 예제를 준비하였다. 빅쿼리 시작에 앞서서 선행적으로 클라우드 사용을 해야 한다.
만약 GCP 프로젝트가 없다면, 계정을 연동한다. Go to Cloud Resource Manager 그리고, 비용결제를 위한 카드를 등록한다. Enable billing 마지막으로 BigQuery API를 사용해야 하기 때문에 빅쿼리 API 사용허가를 내준다.Enable BigQuery 위 API를 이용하지 않으면 Python 또는 R과 연동해서 사용할 수는 없다. 자주 쓰는것이 아니라면 비용은 거의 발생하지 않으니 염려하지 않아도 된다. 비용관리에 대한 자세한 내용은 BigQuery 권장사항: 비용 관리에서 확인하기를 바란다.</description>
    </item>
    
    <item>
      <title>Ch02 Working with BigQuery</title>
      <link>https://dschloe.github.io/gcp/bigquery/01_settings/ch02_working_with_bigquery/</link>
      <pubDate>Sun, 19 Apr 2020 00:13:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/01_settings/ch02_working_with_bigquery/</guid>
      <description>I. Get Started 일단 시작해보자. https://console.cloud.google.com/bigquery
뉴욕주의 자전거 렌탈이 비가 올때와 그렇지 않을 때 수치를 비교하고자 않다. 어떻게 해야할까? 일단, 필요한 데이터는 두가지가 될 것이다. 첫번째는 자전거 렌탈 데이터가 필요하고, 두번째는 뉴욕주의 날씨와 관련된 데이터이다. 두개의 데이터를 조인(join)한 후 수치를 구해야 할 것이다.
위 화면에서 아래 소스코드를 입력한다.
WITH bicycle_rentals AS ( SELECT COUNT(starttime) as num_trips, EXTRACT(DATE from starttime) as trip_date FROM `bigquery-public-data.new_york_citibike.citibike_trips` GROUP BY trip_date ), rainy_days AS ( SELECT date, (MAX(prcp) &amp;gt; 5) AS rainy FROM ( SELECT wx.</description>
    </item>
    
    <item>
      <title>Ch01 BigQuery getstarted</title>
      <link>https://dschloe.github.io/gcp/bigquery/01_settings/ch01_bigquery_getstarted/</link>
      <pubDate>Thu, 16 Apr 2020 11:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/gcp/bigquery/01_settings/ch01_bigquery_getstarted/</guid>
      <description>I. 자료 정리를 하며.. 데이터 분석가에게 또는 싸이언티스트들에게 SQL문법은 매우 중요하다. 지금도 어딘가에는 데이터는 쌓이고 있고, 문제는 쌓여 있는 데이터를 활용해서 어떤 비즈니스 문제를 해결할지가 가장 큰 이슈이기 때문이다.
그동안 SQL은 MySQL과 RDB 문법, MongoDB와 NoSQL과 같은 문법으로 나누어서 볼 수 있다. 강사가 과거 프로젝트에서 사용했던 SQL은 MySQL, MSSQL, MongoDB가 있었는데, 각각의 문법이 다르다는 측면이 있어서 조금 애를 많이 먹었다. 특히 MongoDB문법은 JSON 형태로 되어 있기 때문에, 별도의 문법이라 보는게 더 낫다.</description>
    </item>
    
  </channel>
</rss>
