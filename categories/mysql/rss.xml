<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySQL on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/categories/mysql/</link>
    <description>Recent content in MySQL on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 May 2025 01:40:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/categories/mysql/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Airflow 활용한 DB Insert 예제 (M1, MacOS)</title>
      <link>https://dschloe.github.io/python/2025/05/airflow_db_insert_example/</link>
      <pubDate>Sat, 03 May 2025 01:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2025/05/airflow_db_insert_example/</guid>
      <description>개요 MySQL과 PostgreSQL에 각각 테이블 생성 후 데이터 넣기 아래와 같이 병렬적으로 실행하는 예제 시나리오 테이블과 데이터를 추가하되 두 DB에 대한 접근 방식이 다름 MySQL은 직접적으로 넣기 PostgreSQL은 Airflow를 통해서 데이터 넣기 환경설정 사전에 MySQL과 PostgreSQL이 설치가 이미 되어 있음을 가정한다. 파이썬 설치 uv : https://docs.astral.sh/uv/getting-started/installation/ 프로젝트 초기화 프로젝트 디렉터리에서 다음과 순차적으로 실행 $ uv venv -p 3.11 $ source .venv/bin/activate Airflow 설치 먼저 환경변수를 설정한다. $ export AIRFLOW_HOME=$(pwd)/airflow 셸 스크립트 작성 및 실행 다음과 같이 셸 스크립트 작성 파일명 : install_airflow.</description>
    </item>
    
    <item>
      <title>Docker-Compose와 Dockerfile을 활용한 Flask-MySQL 연동 예제</title>
      <link>https://dschloe.github.io/mlops/2024/07/docker_compose_dockerfile_flask_mysql/</link>
      <pubDate>Tue, 02 Jul 2024 10:30:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/mlops/2024/07/docker_compose_dockerfile_flask_mysql/</guid>
      <description>개요 Docker-Compose와 Dockerfile의 주요 기능을 이해한다. 각 파일의 위치와 주요 기능을 이해한다. 전체 프로젝트 파일 디렉터리 본 프로젝트의 전체 코드는 다음과 같다. 실제 코드 작성을 해야하는 곳은 다음과 같다. app.py requirements.txt init.sql docker-compose.yml Dockerfile docker_kubernetes_flask/ ├── app/ │ ├── __init__.py │ ├── app.py │ └── requirements.txt ├── db/ │ ├── init.sql │ └── data/ (This will be created by Docker) ├── docker-compose.yml └── Dockerfile 사전준비 사전에 Docker는 Desktop 설치가 되어 있다고 가정한다.</description>
    </item>
    
    <item>
      <title>Pandas DataFrame to MySQL Database using iris Data</title>
      <link>https://dschloe.github.io/sql/2024/04/pandas_2_mysql/</link>
      <pubDate>Fri, 05 Apr 2024 16:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/2024/04/pandas_2_mysql/</guid>
      <description>개요 이전 강의에 이어서 진행한다. (MySQL Select Clause via Python) 임의의 Pandas 데이터 프레임에서 MySQL DB로 추가하는 코드를 작성한다. 주요 라이브러리 설치 아래와 같이 주요 라이브러리를 설치한다. MySQL과 관련된 주요 Python 라이브러리를 설치한다. pip install mysql-connector mysql-connector-python pymysql SQLAlchemy seaborn pandas 코드 작성(mysql-connector) 아래와 같이 코드를 작성한다. # 파일명 : db.py import mysql.connector import pandas as pd import seaborn as sns mydb = mysql.connector.connect( host = &amp;#34;localhost&amp;#34;, user = &amp;#34;root&amp;#34;, passwd = &amp;#34;evan&amp;#34;, database = &amp;#34;muldb&amp;#34; ) print(mydb) iris_df = sns.</description>
    </item>
    
    <item>
      <title>MySQL Select Clause via Python</title>
      <link>https://dschloe.github.io/sql/2024/04/mysql_select_via_python/</link>
      <pubDate>Thu, 04 Apr 2024 20:10:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/2024/04/mysql_select_via_python/</guid>
      <description>개요 이전 강의에서 출발한다. MySQL Table Creation and Insert Data via Python 데이터 조회 다음 코드를 작성한다. import mysql.connector mydb = mysql.connector.connect( host = &amp;#34;localhost&amp;#34;, user = &amp;#34;root&amp;#34;, passwd = &amp;#34;evan&amp;#34;, database = &amp;#34;mulcampdb&amp;#34; ) print(mydb) my_cursor = mydb.cursor() query = &amp;#34;&amp;#34;&amp;#34; SELECT * FROM users; &amp;#34;&amp;#34;&amp;#34; my_cursor.execute(query) result = my_cursor.fetchall() for row in result: print(row) print(&amp;#34;완료&amp;#34;) 파일을 실행한다. $ python database.py &amp;lt;mysql.connector.connection_cext.CMySQLConnection object at 0x000001FE5A985F10&amp;gt; (&amp;#39;Evan&amp;#39;, &amp;#39;Evan@gmail.com&amp;#39;, 30, 1) (&amp;#39;Evan&amp;#39;, &amp;#39;Evan@gmail.</description>
    </item>
    
    <item>
      <title>MySQL Table Creation and Insert Data via Python</title>
      <link>https://dschloe.github.io/sql/2024/04/mysql_data_insert_via_python/</link>
      <pubDate>Thu, 04 Apr 2024 18:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/2024/04/mysql_data_insert_via_python/</guid>
      <description>개요 이전 강의에서 출발한다. Connect To Database in Python 테이블 생성 아래 코드를 작성하면 테이블이 생성된다. import mysql.connector mydb = mysql.connector.connect( host = &amp;#34;localhost&amp;#34;, user = &amp;#34;root&amp;#34;, passwd = &amp;#34;evan&amp;#34;, database = &amp;#34;mulcampdb&amp;#34; ) print(mydb) my_cursor = mydb.cursor() query = &amp;#34;&amp;#34;&amp;#34; CREATE TABLE users ( name VARCHAR(255) , email VARCHAR(255) , age INTEGER(10) , user_id INTEGER AUTO_INCREMENT PRIMARY KEY ); &amp;#34;&amp;#34;&amp;#34; my_cursor.execute(query) my_cursor.execute(&amp;#34;SHOW TABLES;&amp;#34;) for table in my_cursor: print(table[0]) 파일을 실행한다.</description>
    </item>
    
    <item>
      <title>Connect To Database in Python</title>
      <link>https://dschloe.github.io/sql/2024/04/conn_db_2_python/</link>
      <pubDate>Thu, 04 Apr 2024 10:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/2024/04/conn_db_2_python/</guid>
      <description>개요 Python과 MySQL을 연동하도록 한다. 프로젝트 폴더에 가상환경이 설치가 되어 있는 것으로 가정한다. MySQL은 기 설치가 되어 있는 것으로 가정한다. 라이브러리 설치 Python과 MySQL을 연동해주는 라이브러리 종류는 다양하게 있다. $ pip install mysql-connector mysql-connector-python 파일 작성 간단하게 파일을 작성한다. import mysql.connector mydb = mysql.connector.connect( host = &amp;#34;localhost&amp;#34;, user = &amp;#34;root&amp;#34;, passwd = &amp;#34;evan&amp;#34; ) print(mydb) 파일을 실행한다. $ python database.py &amp;lt;mysql.connector.connection_cext.CMySQLConnection object at 0x000002BF4E606090&amp;gt; (venv) Python 코드 활용하여 DB 생성 이번에는 코드를 활용하여 Schema를 생성한다.</description>
    </item>
    
    <item>
      <title>MySQL 삭제, 재설치 가이드 on M1</title>
      <link>https://dschloe.github.io/sql/2024/04/mysql_delete_reinstall/</link>
      <pubDate>Tue, 02 Apr 2024 10:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/2024/04/mysql_delete_reinstall/</guid>
      <description>개요 M1에서 MySQL을 설치 하고 Workbench에 접속하는 과정을 설명한다. 데이터 로드 시, ASCII 에러 과정 해결하는 방법도 살펴본다. (임시방편) 사전학습 brew 명령어를 알고 있는 분에 한해 작성을 하였다. 주의 아래 코드 복사할 시, $ 는 제외 후 복사한다. MySQL 실행 확인 후 프로세스 Kill 먼저 MySQL이 실행중인지를 확인한다. $ brew services list Name Status User File mysql started evan ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist 서비스를 강제 종료한다. $ brew services stop mysql Stopping `mysql`... (might take a while) ==&amp;gt; Successfully stopped `mysql` (label: homebrew.</description>
    </item>
    
    <item>
      <title>MySQL Workbench File Import Error in Mac</title>
      <link>https://dschloe.github.io/sql/2023/10/mysql_import_error_mac/</link>
      <pubDate>Wed, 04 Oct 2023 10:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/2023/10/mysql_import_error_mac/</guid>
      <description>개요 MySQL Workbench에서 File을 불러올 때 에러가 발생했을 때 대처 요령을 소개한다. Workbench에서 File을 불러올 때 가끔 아래와 같은 아래가 발생하곤 한다. 해결방법은 MySQL Shell Script에서 직접 파일을 불러오는 방식이다. MySQL 재접속 기존에 Workbench에 접속해 있었다면 우선 종료를 한다. 재접속 전 Edit Connection 버튼을 클릭한다.
Advanced Tab을 클릭한다.
Others 메뉴에서 OPT_LOCAL_INFILE=1 을 입력한다. Test Connection 버튼을 클릭하여 정상적으로 접속이 되는지 재 확인한다. 이제 재 접속을 하면 Workbench의 설정은 완료가 되었다. Schema 및 Table 생성 마우스 우클릭 후 스키마를 생성한다.</description>
    </item>
    
    <item>
      <title>MySQL Workbench ERD - 1</title>
      <link>https://dschloe.github.io/sql/2023/09/mysql_workbench_erd/</link>
      <pubDate>Fri, 15 Sep 2023 11:00:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/2023/09/mysql_workbench_erd/</guid>
      <description>개요 MySQL Workbench를 통해 ERD 작업을 수행하도록 한다. Step 1 - 메뉴 선택 상단 메뉴에서 Database &amp;gt; Reverse Engineer 를 선택한다. Step 2 - Reverse Engineer Database Next 버튼을 클릭한다. Step 3 - Connect to MySQL Server 팝업창에서 root 또는 사용자 비밀번호 입력 후, 확인 버튼을 누르면 아래와 같이 연결이 될 것이다. Step 4 - Schema 선택 classicmodels 스키마를 선택한다. Step 4 - Connect to MySQL Server 비밀번호를 입력한다. Step 5 - 순차적으로 버튼 선택 Next 버튼을 클릭한다.</description>
    </item>
    
    <item>
      <title>MySQL Error Code 1175 해결</title>
      <link>https://dschloe.github.io/sql/2023/09/mysql_error_code_1175/</link>
      <pubDate>Thu, 14 Sep 2023 17:00:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/2023/09/mysql_error_code_1175/</guid>
      <description>개요 Delete 문법을 진행하는데, 아래와 같은 에러가 발생하였다. 옵션 설정을 변경하여 코드를 재실행한다. Safe Mode 끄기 아래 코드를 실행한다. SET SQL_SAFE_UPDATES = 0; Edit &amp;gt; Preferences &amp;gt; SQL Editor &amp;gt; Other 에서 Safe Updates 체크되어 있는 것을 삭제한다. 코드 재 실행 Delete 코드를 재 실행한다. DELETE FROM tasks WHERE start_date = DATE(&amp;#39;2023-09-14&amp;#39;); 정상적으로 Delete 코드가 실행된 것을 확인할 수 있다. </description>
    </item>
    
    <item>
      <title>MySQL 실습 데이터 추가</title>
      <link>https://dschloe.github.io/sql/2023/09/mysql_data_insert/</link>
      <pubDate>Thu, 14 Sep 2023 10:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/2023/09/mysql_data_insert/</guid>
      <description>개요 강의를 위한 CSV 파일을 Workbench를 통해 업로드를 하도록 한다. 교재 판매처 : https://www.yes24.com/Product/Goods/86544423 Workbench 접속 Local instance MySQL을 클릭한다. 최초 설치 진행시 진행한 password를 입력한다. 로그인한 화면은 아래와 같다. Sample 데이터 다운로드 사이트 : https://www.mysqltutorial.org/mysql-sample-database.aspx Download MySQL Sample Database를 클릭하여 다운로드 받는다. 압축파일을 풀면 아래와 같이 mysqlsampledatabase.sql 파일을 확인하다. 쿼리 불러오기 MySQL Workbench을 열고 File &amp;gt; Open SQL Script를 클릭한다. mysqlsampledatabase.sql 파일을 연다. 번개 모양의 아이콘을 클릭하면 쿼리가 실행된다. 좌측 메뉴바에서 Schemas 탭을 클릭 후, 새로고침을 한다.</description>
    </item>
    
    <item>
      <title>MySQL 설치 (윈도우 11 기반)</title>
      <link>https://dschloe.github.io/sql/2023/09/my_sql_install_windows11/</link>
      <pubDate>Wed, 13 Sep 2023 11:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/2023/09/my_sql_install_windows11/</guid>
      <description>개요 MySQL 설치를 진행한다. MySQL 다운로드 사이트 : https://dev.mysql.com/downloads/windows/installer/8.0.html 위 화면에서 2번째를 선택한다. 선택 시, 로그인을 해야 하는 상황이 올수도 있다. 회원 가입 후, 재 진행 한다. 다음 화면에서 Download Now버튼을 클릭한다. MySQL 설치 다운로드 설치 프로그램을 실행한다. 아래 메뉴에서 선택적으로 설치가 가능하다. 여기에서는 Full 을 선택하고 설치를 진행하도록 한다. Execute 버튼을 클릭하여 설치를 진행한다. Next 버튼을 클릭한다. 포트 번호 (3306)를 기억한다. 간단하게 접속을 진행하기 위해 두번째 메뉴 선택 후, Next 버튼을 클릭한다.</description>
    </item>
    
    <item>
      <title>MySQL 완전 삭제 (윈도우 11 기반)</title>
      <link>https://dschloe.github.io/sql/2023/09/mysql_delete_windows11/</link>
      <pubDate>Wed, 13 Sep 2023 11:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/2023/09/mysql_delete_windows11/</guid>
      <description>개요 기 설치된 MySQL을 완전 삭제하도록 한다. MySQL은 제어판 및 프로그램 제거를 통해서 삭제가 되지 않고, 이런 상태에서 제거할 경우, 재 설치 시 에러가 발생할 가능성이 높음 프로그램 추가 / 제거 MySQL과 관련된 모든 프로그램을 삭제한다. appdata에서 MySQL 폴더 삭제 window 버튼 + R을 누른 후, 아래와 같이 %appdata% 입력 후 확인 버튼을 클릭한다. MySQL 폴더를 삭제한다. ProgramData에서 MySQL 관련 폴더 삭제 Windows + R 실행 후, %ProgramData% 입력 후 확인 버튼을 누른다.</description>
    </item>
    
    <item>
      <title>Excel with MySQL 연동</title>
      <link>https://dschloe.github.io/sql/excel_with_mysql/</link>
      <pubDate>Sun, 09 Oct 2022 14:40:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/sql/excel_with_mysql/</guid>
      <description>개요 엑셀 VBA 강의 중 Excel에서 MySQL DB와 연동하는 방법 의뢰를 받음 엑셀은 MySQL과 연결이 (생각보다) 매우 쉽게 할 수 있도록 설계 되어 있었음 사전준비 MySQL 설치 과정은 다음 자료를 참고한다. https://hongong.hanbit.co.kr/mysql-다운로드-및-설치하기mysql-community-8-0/ 버전 확인 먼저 필자는 윈도우 11에서 작업중임 필자의 엑셀 정보는 아래와 같음 [계정] - [Excel 정보] 클릭하면 아래와 같음 필자의 MySQL 정보는 아래와 같음 필수 설치 프로그램 다운로드 및 설치 https://www.microsoft.com/ko-kr/download/details.aspx?id=48217 에 접속 후 다운로드 받은 후 설치를 진행한다.</description>
    </item>
    
    <item>
      <title>MySQL Database 생성 및 권한 부여</title>
      <link>https://dschloe.github.io/settings/mysql_database_creation/</link>
      <pubDate>Sun, 19 Jun 2022 09:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/mysql_database_creation/</guid>
      <description>개요 MySQL 관리자 계정인 root로 DB 관리시스템에 접속 후 DB를 생성한다. 사전준비 MySQL 설치 및 환경변수를 설정한다. 참조 : https://dschloe.github.io/settings/mysql_installation_windows11/ DB 생성 콘솔창에서 MySQL 명령을 실행한다. C:\Users\your_name&amp;gt;mysql -uroot -p Enter password: **** Welcome to the MySQL monitor. Commands end with ; or \g. Your MySQL connection id is 19 Server version: 8.0.28 MySQL Community Server - GPL Copyright (c) 2000, 2022, Oracle and/or its affiliates. Oracle is a registered trademark of Oracle Corporation and/or its affiliates.</description>
    </item>
    
    <item>
      <title>MySQL 설치 및 환경변수 설정 Windows 11</title>
      <link>https://dschloe.github.io/settings/mysql_installation_windows11/</link>
      <pubDate>Sat, 18 Jun 2022 09:30:30 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/mysql_installation_windows11/</guid>
      <description>개요 Windows 11에 MySQL을 설치합니다. MySQL 챗봇 시스템의 학습 데이터 관리 위해 MySQL을 사용함 설치 주소 : https://dev.mysql.com/downloads/ MySQL Installer for Windows 파일을 선택함 MSI Installer를 다운로드 받는다. 다운로드 받은 파일을 순차적으로 설치 한다. 비밀번호는 잃어버리면 안된다. (비번 : 1234) 앞서 설정한 비밀번호를 입력하고 체크 버튼을 누른다. 정상적으로 설치가 완료되었다. 윈도우에서 돋보기 모양을 누른 후, MySQL 8.0 Command Line Client를 클릭한다. root 계정 비밀번호를 입력 후 접속한다. 비밀번호 1234를 클릭한다. 환경변수 설정 환경변수 설정을 하지 않으면 cmd 명령어 창에서 mysql 명령어를 사용할 수 없다.</description>
    </item>
    
  </channel>
</rss>
