<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Streamlit on Data Science | DSChloe</title>
    <link>https://dschloe.github.io/categories/streamlit/</link>
    <description>Recent content in Streamlit on Data Science | DSChloe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Feb 2025 01:40:47 +0900</lastBuildDate><atom:link href="https://dschloe.github.io/categories/streamlit/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LangChain with Streamlit 논문요약 예제</title>
      <link>https://dschloe.github.io/python/2025/02/langchain_streamlit/</link>
      <pubDate>Sun, 09 Feb 2025 01:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2025/02/langchain_streamlit/</guid>
      <description>개요 LangChain의 기본 개념에 대해 살펴본다. LangChain을 활용하며 간단한 웹앱을 구현한다. 각 사용자가 본인의 API를 입력하면 해당 기능을 사용할 수 있도록 구현한다. LangChain의 기본개념 LangChain은 대규모 언어 모델(LLM)을 활용한 애플리케이션 개발을 위한 프레임워크입니다. 주요 특징과 장점은 다음과 같다. 모듈성 다양한 LLM과 도구들을 쉽게 통합하고 교체할 수 있다. 재사용 가능한 컴포넌트를 제공한다. 체이닝(Chaining) 여러 컴포넌트를 연결하여 복잡한 워크플로우를 구성할 수 있다. 프롬프트, LLM 호출, 출력 파싱 등을 순차적으로 처리한다 메모리 관리 대화 기록을 저장하고 관리할 수 있다.</description>
    </item>
    
    <item>
      <title>Streamlit on Google Colab</title>
      <link>https://dschloe.github.io/python/2024/06/streamlit_on_google_colab/</link>
      <pubDate>Thu, 20 Jun 2024 01:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2024/06/streamlit_on_google_colab/</guid>
      <description>개요 개발환경설정이 어려운 환경에서 Google Colab 상에서 Streamlit 설치 및 실행을 익히고자 한다. 주로 강의 목적으로 사용하기를 바란다. Streamlit 라이브러리 설치 아래 코드를 활용하여 streamlit 라이브러리 설치 !pip install -q streamlit Streamlit 코드 작성 샘플 아래와 같이 코드를 작성 후, app.py로 내보내기를 한다. magics from Jupyter : [Jupyter’s magics page](https://nbviewer.org/github/ipython/ipython/blob/1.x/examples/notebooks/Cell Magics.ipynb) %%writefile app.py import streamlit as st import plotly.graph_objs as go from plotly.subplots import make_subplots import seaborn as sns @st.cache_data def load_data(): df = sns.</description>
    </item>
    
    <item>
      <title>Streamlit ML Multiclass Classification Model Prediction Sample (feat. Pipeline)</title>
      <link>https://dschloe.github.io/python/2024/03/streamlit_model_prediction_obesity/</link>
      <pubDate>Wed, 06 Mar 2024 01:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2024/03/streamlit_model_prediction_obesity/</guid>
      <description>개요 Kaggle 데이터셋을 활용하여 Streamlit ML Multiclass Classification Model을 배포한다. 각 코드에 대한 자세한 설명은 여기에서는 생략한다. 데이터 수집 이번에 활용하는 캐글 데이터 수집은 아래 대회에서 train 데이터만 가져왔다. Multi-Class Prediction of Obesity Risk : https://www.kaggle.com/competitions/playground-series-s4e2 Dataset Description은 아래에서 확인하도록 한다. 링크 : https://www.kaggle.com/competitions/playground-series-s4e2/data train.csv 파일만 다운로드 받았다. 모델 개발 다음 코드는 모델을 개발하는 코드이다. 주어진 데이터셋에서 종속변수 NObeyesdad을 예측하는 모델을 구성했다. 파일명 : model.py import pandas as pd from sklearn.</description>
    </item>
    
    <item>
      <title>Streamlit ML Model Prediction Sample (feat. Pipeline)</title>
      <link>https://dschloe.github.io/python/2024/03/streamlit_model_prediction_tip/</link>
      <pubDate>Tue, 05 Mar 2024 01:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2024/03/streamlit_model_prediction_tip/</guid>
      <description>강의소개 인프런에서 Streamlit 관련 강의를 진행하고 있습니다. 인프런 : https://inf.run/YPniH 개요 tips 데이터셋을 활용하여 Streamlit ML Model을 배포한다. 각 코드에 대한 자세한 설명은 여기에서는 생략한다. 모델 개발 다음 코드는 모델을 개발하는 코드이다. 주어진 데이터셋에서 tip을 예측하는 모델을 구성했다. 파일명 : model.py import streamlit as st import pandas as pd import seaborn as sns from sklearn.model_selection import train_test_split from sklearn.linear_model import LinearRegression from sklearn.compose import ColumnTransformer from sklearn.pipeline import Pipeline from sklearn.</description>
    </item>
    
    <item>
      <title>st-pages 라이브러리 소개</title>
      <link>https://dschloe.github.io/python/2024/02/st_pages_library/</link>
      <pubDate>Wed, 28 Feb 2024 01:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2024/02/st_pages_library/</guid>
      <description>강의소개 인프런에서 Streamlit 관련 강의를 진행하고 있습니다. 인프런 : https://inf.run/YPniH 개요 Streamlit 생태계에 기반한 Components를 살펴본다. st-pages 라이브러리를 확인한다. Components Components는 Streamlit Community와 Creators가 직접 개발한 Streamlit 관련 라이브러리를 말한다. 참고 : https://streamlit.io/components 여기에는 다양한 라이브러리들이 존재한다. 활용법 주의 이러한 라이브러리들을 활용할 때는 Github의 최근 개발 이력을 살펴볼 필요가 있다. 예: spacy-streamlit, https://github.com/explosion/spacy-streamlit 확인해야 하는 것은 최근 Releases 날짜다. Release 날짜가 최근 날짜에서 멀면 멀수록 관리가 안되고 있다는 것이며, 이 부분은 향후 프로젝트 유지보수할 때 어려움을 겪을 수도 있다.</description>
    </item>
    
    <item>
      <title>creating multipages in streamlit web using official docs</title>
      <link>https://dschloe.github.io/python/2024/02/streamlit_multipages_01/</link>
      <pubDate>Sun, 25 Feb 2024 01:40:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2024/02/streamlit_multipages_01/</guid>
      <description>강의소개 인프런에서 Streamlit 관련 강의를 진행하고 있습니다. 인프런 : https://inf.run/YPniH 개요 streamli을 활용한 멀티페이지 개념 및 구현에 대한 내용을 다룬다. 공식문서 참고 : Create a multipage app : https://docs.streamlit.io/get-started/tutorials/create-a-multipage-app Multipage apps : https://docs.streamlit.io/library/advanced-features/multipage-apps Streamlit에서 multipage란 무엇인가? 앱의 크기가 커질수록 다중 페이지 구성은 관리와 탐색의 용이성을 제공함. Streamlit은 이를 쉽게 가능하게 하며, 클릭 한 번으로 해당 페이지에 빠르게 이동할 수 있다. 폴더 및 파일 구조 Home.py 파일을 만든 후에는 엔트리포인트 파일과 관련된 pages/about.</description>
    </item>
    
    <item>
      <title>출간 기념, Streamlit으로 프로젝트 한방에 끝내기 with 파이썬 개정판 (2024, Sara &amp; Evan)</title>
      <link>https://dschloe.github.io/ds-projects/2024/01/book_intro/</link>
      <pubDate>Sun, 04 Feb 2024 00:01:28 +0900</pubDate>
      
      <guid>https://dschloe.github.io/ds-projects/2024/01/book_intro/</guid>
      <description>개정판 책을 출간하였습니다. Streamlit이란 Streamlit은 데이터 분석가가 간단한 코드 몇줄로 빠르게 웹앱을 만들어 줄 수 있는 Python 라이브러리입니다. 웹사이트 : https://streamlit.io/ 누가 읽어야 할까요? 데이터 분석가 : 웹개발은 모르지만 대시보드를 만들어야 하는 분 국비교육 수강중인 비전공자 : Java 웹개발로 머신러닝 플랫폼을 만들어야 하는 분 개별적인 포트폴리오가 필요한 취업준비생 : ML/DL 알고리즘 익히는 것도 어려운데, 웹개발은 언제 배우죠? 데모 페이지 기초문법 포함 2달이면 충분히 아래 데모 페이지와 같이 만들 수 있습니다.</description>
    </item>
    
    <item>
      <title>출간 기념, Streamlit으로 프로젝트 한방에 끝내기 with 파이썬(2023, Sara &amp; Evan)</title>
      <link>https://dschloe.github.io/ds-projects/2023/06/book_intro/</link>
      <pubDate>Thu, 01 Jun 2023 01:03:28 +0900</pubDate>
      
      <guid>https://dschloe.github.io/ds-projects/2023/06/book_intro/</guid>
      <description>책을 출간하였습니다. Streamlit이란 Streamlit은 데이터 분석가가 간단한 코드 몇줄로 빠르게 웹앱을 만들어 줄 수 있는 Python 라이브러리입니다. 웹사이트 : https://streamlit.io/ 누가 읽어야 할까요? 데이터 분석가 : 웹개발은 모르지만 대시보드를 만들어야 하는 분 국비교육 수강중인 비전공자 : Java 웹개발로 머신러닝 플랫폼을 만들어야 하는 분 개별적인 포트폴리오가 필요한 취업준비생 : ML/DL 알고리즘 익히는 것도 어려운데, 웹개발은 언제 배우죠? 데모 페이지 기초문법 포함 2달이면 충분히 아래 데모 페이지와 같이 만들 수 있습니다. 데모 페이지 : https://dschloe-streamlit-book-seoul-app-w9me9j.</description>
    </item>
    
    <item>
      <title>Streamlit Matplotlib 한글폰트 적용 예제</title>
      <link>https://dschloe.github.io/python/2023/05/streamlit_korean_fonts/</link>
      <pubDate>Tue, 16 May 2023 00:01:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/05/streamlit_korean_fonts/</guid>
      <description>Streamlit Matplotlib-Seaborn 한글폰트 적용 개요 배포 시, matplotlib &amp;amp; seaborn 한글 폰트 적용 하는 방법에 대해 알아본다. 나눔고딕 폰트를 적용해본다. 폰트 다운로드 사이트 : https://fonts.google.com/specimen/Nanum+Gothic 개발환경 세팅 git clone 명령어를 활용하여 프로젝트 repo를 다운로드 받는다. 가상환경을 설정한다. virtualenv venv 실행한다. source venv/Scripts/activate 실행하여 가상환경에 접속한다. $ virtualenv venv created virtual environment CPython3.9.13.final.0-64 in 606ms creator CPython3Windows(dest=C:\Users\YONSAI\Desktop\streamlit-korean-fonts\venv, clear=False, no_vcs_ignore=False, global=False) seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=C:\Users\YONSAI\AppData\Local\pypa\virtualenv) added seed packages: pip==23.1.2, setuptools==67.</description>
    </item>
    
    <item>
      <title>Docker Streamlit Sample</title>
      <link>https://dschloe.github.io/settings/2023/2/docker_streamlit_app_windows10/</link>
      <pubDate>Wed, 15 Feb 2023 00:01:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/settings/2023/2/docker_streamlit_app_windows10/</guid>
      <description>개요 도커를 활용하여 Streamlit 배포를 진행해본다. Dockerfile의 의미에 대해 이해한다. Dockerfile Docker 이미지를 빌드하기 위한 일련의 명령어를 포함하는 텍스트 파일 컨테이너에서 애플리케이션이 실행될 때 필요한 환경과 종속성을 정의하는 방법을 제공 패키지 설치, 파일 복사 및 환경 변수 설정 등의 지시어가 포함 사전준비 github에 sample 프로젝트를 올려둔다. 예제 : https://github.com/streamlit/streamlit-example 필자는 독립적으로 github repository를 작성했다. 소스코드 예제 소스코드는 크게 아래와 같이 작성했다. 먼저 app.py는 아래와 같다. import numpy as np import pandas as pd import matplotlib import sklearn import scipy import plotly import streamlit as st def main(): st.</description>
    </item>
    
    <item>
      <title>Streamlit &amp; ChatGPT API 배포 예제</title>
      <link>https://dschloe.github.io/python/2023/02/streamlit_openai_example/</link>
      <pubDate>Thu, 09 Feb 2023 01:01:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/02/streamlit_openai_example/</guid>
      <description>강의소개 인프런에서 Streamlit 관련 강의를 진행하고 있습니다. 인프런 : https://inf.run/YPniH 개요 ChatGPT API 배포 예제 흐름도를 보여주도록 한다. Streamlit 회원가입, OpenAI 회원가입은 완료했다는 가정하에 본 블로그를 읽기 바란다. Streamlit : https://share.streamlit.io/ OpenAI : https://openai.com/api/ API Key 생성 아래 화면에서 View API Keys를 클릭한다. 아래 화면에서 Create new secret key 버튼을 클릭한다. 계정 발급 시 필수 확인 사항 필자는 사업자 G메일 계정이 있고, 개인 계정이 있다. 먼저 개인 계정의 사용자 대시보드 화면은 아래와 같이 나온다.</description>
    </item>
    
    <item>
      <title>Streamlit 라이브러리를 활용한 배포 예제 - sqlite</title>
      <link>https://dschloe.github.io/python/2023/02/streamlite_with_sqlite/</link>
      <pubDate>Wed, 01 Feb 2023 00:01:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2023/02/streamlite_with_sqlite/</guid>
      <description>강의소개 인프런에서 Streamlit 관련 강의를 진행하고 있습니다. 인프런 : https://inf.run/YPniH 개요 간단한 프로젝트라도 DB와 연동하는 작업은 매우 중요하다. 클라우드 DB를 사용하기 위해서는 클라우드 회원가입 등 번거로운 절차를 거쳐야 하며, 또한 비용도 추가될 수도 있다. SQLite를 사용하면 간단한 DB 작업도 진행할 수 있다. Streamlit + SQLite 연동 작업을 간단히 하도록 해본다. SQLite 데이터 핸들링을 하기 위해서는 Python 기초 문법, Pandas 라이브러리를 배워야 한다. Pandas는 본 블로그에서 CSV 파일을 읽고 저장을 하는데 사용을 하게 된다.</description>
    </item>
    
    <item>
      <title>Streamlit 라이브러리를 활용한 배포 - BigQuery 사용</title>
      <link>https://dschloe.github.io/python/2022/12/streamlit_bigquery/</link>
      <pubDate>Fri, 02 Dec 2022 15:15:47 +0900</pubDate>
      
      <guid>https://dschloe.github.io/python/2022/12/streamlit_bigquery/</guid>
      <description>개요 Streamlit 라이브러리와 BigQuery를 사용하여 배포를 진행한다. GCP 클라우드 프로젝트 설정 과정은 생략한다. BigQuery API 사용설정 Project API에서 ENABLE APIS AND SERVICES 버튼을 클릭한다. 빅쿼리 API를 탐색한다. 키워드명 : BigQuery API manage 버튼을 클릭한다. 인증키를 다운로드 받도록 한다. (CREATE CREDENTIALS클릭) 아래와 같이 지정 후, 스크롤을 내려서 NEXT 버튼을 클릭한다. 임의의 Service account ID 작성 후, CREATE AND CONTINUE 버튼을 클릭한다. 프로젝트 권한을 부여 후, CONTINUE 버튼을 클릭한다. Done 버튼을 클릭한다. Service Accounts - [우측] Manage keys 버튼 클릭 Create new key 버튼 클릭 JSON 클릭 json 파일을 다운로드 받는다.</description>
    </item>
    
  </channel>
</rss>
